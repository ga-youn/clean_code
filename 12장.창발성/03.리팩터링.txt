단순한 설계 규칙 2~4 : 리팩터링

테스트케이스를 모두 작성했다면 코드와 클래스를 정리해도 괜찮다.
구체적으로는 코드를 점진적으로 리팩터링 해나간다.
테스트 케이스를 만들면
코드를 정리하면서 시스템이 개질까 걱정할 필요가 없다.
리팩터링 단계에서는 소프트웨어 설계 품질을 높이는 기법이라면 무엇이든 적용해도 괜찮다.
응집도를 높이고, 결합도를 낮추고, 관심사를 분리하고, 시스템 관심사를 모듈로 나누고, 함수와 클래스 크기를 줄이고, 
더 나은 이름을 선택하는 등 다양한 기법을 동원한다.
또한 이 단계는 단순한 설계 규칙 중 나머지 3개를 적용해 중복을 ㅈ거하고, 프로그래머 의도를 표현하고, 클래스와 메서드 수를 최소로 줄이는 단계이기도 하다.